{"version":3,"sources":["task.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","handleClick","e","setState","editMode","updateValue","task","handleOnChange","target","value","handleSave","newTask","state","this","handleDelete","id","type","onChange","onClick","style","display","justifyContent","Component","App","handleonChange","tasks","console","log","indexOf","splice","preventDefault","push","document","querySelector","reset","className","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iOA4DeA,E,kDAvDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZC,UAAU,IAEZ,EAAKD,SAAS,CAAEE,YAAa,EAAKL,MAAMM,QAZvB,EAcnBC,eAAiB,SAACL,GAChB,EAAKC,SAAS,CAAEE,YAAa,CAACH,EAAEM,OAAOC,UAftB,EAiBnBC,WAAa,SAACR,GACZ,EAAKC,SAAS,CAAEQ,QAAS,EAAKC,MAAMP,cACpC,EAAKF,SAAS,CAAEC,UAAU,KAjB1B,EAAKQ,MAAQ,CACXD,QAAS,EAAKX,MAAMM,KACpBF,UAAU,EACVC,YAAa,IALE,E,qDAqBT,IAAD,SACwBQ,KAAKb,MAA5BM,EADD,EACCA,KAAMQ,EADP,EACOA,aACNV,EAAaS,KAAKD,MAAlBR,SACR,OACE,8BACGA,EACC,gCACE,uBACEW,GAAG,WACHC,KAAK,OACLC,SAAU,SAACf,GAAD,OAAO,EAAKK,eAAeL,IACrCO,MAAOI,KAAKD,MAAMP,cAEpB,wBAAQa,QAAS,kBAAM,EAAKR,cAA5B,qBAGF,gCACE,oBACES,MAAO,CACLC,QAAS,eACTC,eAAgB,iBAHpB,UAMGf,EAAM,OAET,wBAAQY,QAAS,kBAAMJ,EAAaR,IAApC,oBACA,wBAAQY,QAASL,KAAKZ,YAAtB,2B,GAhDOqB,a,UCwDJC,E,kDAtDb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAMRwB,eAAiB,SAACtB,GAChB,EAAKC,SAAS,CACZG,KAAM,CAACJ,EAAEM,OAAOC,UATD,EAYnBK,aAAe,SAACR,GAAU,IAChBmB,EAAU,EAAKb,MAAfa,MACRC,QAAQC,IAAIF,EAAMG,QAAQtB,IAC1BmB,EAAMI,OAAOJ,EAAMG,QAAQtB,GAAO,GAClC,EAAKH,SAAS,KAhBG,EAqBnBF,YAAc,SAACC,GACbA,EAAE4B,iBADiB,MAEK,EAAKlB,MAArBN,EAFW,EAEXA,KAAMmB,EAFK,EAELA,MACD,KAATnB,IACFmB,EAAMM,KAAKzB,GACX,EAAKH,SAAS,CACZsB,MAAOA,IAEUO,SAASC,cAAc,QAC/BC,UA5Bb,EAAKtB,MAAQ,CACXa,MAAO,GACPnB,KAAM,IAJS,E,qDAkCT,IAAD,SACiBO,KAAKD,MAAfa,GADP,EACCnB,KADD,EACOmB,OACd,OACE,8BACE,sBAAKV,GAAG,cAAR,UACE,uBAAMoB,UAAU,MAAhB,UACE,uBAAOlB,SAAUJ,KAAKW,eAAgBT,GAAG,QACzC,wBAAQC,KAAK,QAAQE,QAASL,KAAKZ,YAAnC,uBAIDwB,EAAMW,KAAI,SAAC9B,GAAD,OACT,cAAC,EAAD,CAAMA,KAAMA,EAAMQ,aAAc,EAAKA,2B,GA/C/BQ,aCOHe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFhB,SAASiB,eAAe,SAM1BZ,M","file":"static/js/main.45961414.chunk.js","sourcesContent":["// @flow\r\n// import * as React from \"react\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Task extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newTask: this.props.task,\r\n      editMode: false,\r\n      updateValue: \"\",\r\n    };\r\n  }\r\n  handleClick = (e) => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n    this.setState({ updateValue: this.props.task });\r\n  };\r\n  handleOnChange = (e) => {\r\n    this.setState({ updateValue: [e.target.value] });\r\n  };\r\n  handleSave = (e) => {\r\n    this.setState({ newTask: this.state.updateValue });\r\n    this.setState({ editMode: false });\r\n  };\r\n  render() {\r\n    const { task, handleDelete } = this.props;\r\n    const { editMode } = this.state;\r\n    return (\r\n      <div>\r\n        {editMode ? (\r\n          <div>\r\n            <input\r\n              id=\"edittext\"\r\n              type=\"text\"\r\n              onChange={(e) => this.handleOnChange(e)}\r\n              value={this.state.updateValue}\r\n            />\r\n            <button onClick={() => this.handleSave()}>SAVE</button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p\r\n              style={{\r\n                display: \"inline-block\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              {task}{\" \"}\r\n            </p>\r\n            <button onClick={() => handleDelete(task)}>Delete</button>\r\n            <button onClick={this.handleClick}>EDIT</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from \"react\";\nimport Task from \"./task\";\nimport \"./App.css\";\nimport { addtask, ADD_TASK } from \"./actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      task: \"\",\n    };\n  }\n  handleonChange = (e) => {\n    this.setState({\n      task: [e.target.value],\n    });\n  };\n  handleDelete = (task) => {\n    const { tasks } = this.state;\n    console.log(tasks.indexOf(task));\n    tasks.splice(tasks.indexOf(task), 1);\n    this.setState({});\n    // window.location.reload();\n    // tasks.filter(task);\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const { task, tasks } = this.state;\n    if (task !== \"\") {\n      tasks.push(task);\n      this.setState({\n        tasks: tasks,\n      });\n      const submitForm = document.querySelector(\".add\");\n      submitForm.reset();\n      // this.props.store.dispatch(addtask(task));\n    }\n  };\n  render() {\n    const { task, tasks } = this.state;\n    return (\n      <div>\n        <div id=\"action-area\">\n          <form className=\"add\">\n            <input onChange={this.handleonChange} id=\"tas\" />\n            <button type=\"reset\" onClick={this.handleClick}>\n              Submit\n            </button>\n          </form>\n          {tasks.map((task) => (\n            <Task task={task} handleDelete={this.handleDelete} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import { Provider } from \"react-redux\";\n// import { createStore } from \"redux\";\n// import { rootReducer } from \"./reducers/index\";\n\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n    <App />\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}